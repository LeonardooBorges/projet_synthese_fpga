LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;

entity ALU is
	port (
		A  : in  signed(31 downto 0);   -- operand A
		B  : in  signed(31 downto 0);   -- operand B
		OP : in  unsigned(2 downto 0); -- opcode
		Y  : out signed(31 downto 0);  -- operation result
		Z  : out std_logic; -- zero
	);	
end ALU;

architecture behavioral of ALU is
begin
  process(A, B, OP) begin
    case OP is  -- decode the opcode and perform the operation:
      when "000" =>  Y <= A + B;   -- add
      when "001" =>  Y <= A - B;   -- subtract
      when "010" =>  Y <= A - 1;   -- decrement
      when "011" =>  Y <= A + 1;   -- increment
      when "100" =>  Y <= not A;   -- 1's complement
      when "101" =>  Y <= A and B; -- bitwise AND
      when "110" =>  Y <= A or B;  -- bitwise OR
      when "111" =>  Y <= A xor B; -- bitwise XOR
      when others => NULL;
    end case; 
  end process; 
end behavioral;